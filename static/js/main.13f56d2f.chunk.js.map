{"version":3,"sources":["Login.js","App.js","reportWebVitals.js","index.js"],"names":["Login","_ref","onLogin","username","setUsername","useState","password","setPassword","_jsxs","className","children","_jsx","type","placeholder","value","onChange","e","target","onClick","handleLogin","ProjectList","projects","onSelectProject","style","padding","map","project","services","name","ProjectDetails","_ref2","onSelectServices","color","projecct","ServerInstancesDashboard","_ref3","serverInstances","serviceKey","Object","keys","specs","serviceValues","values","console","log","border","borderRadius","display","idx","FirewallDashboard","_ref4","firewallRules","ObjectArr","usage","objects","memory","size","CChart","data","labels","datasets","label","backgroundColor","borderColor","pointBackgroundColor","pointBorderColor","ObjectStorageDashboard","_ref5","objectStorage","slug","App","loggedInUser","setLoggedInUser","selectedProject","setSelectedProject","selectedservice","setSelectedservice","apiData","setApiData","useEffect","axios","get","headers","Authorization","key","then","res","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","React","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.13f56d2f.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport './Login.css' ;\r\n\r\nconst Login = ({ onLogin }) => {\r\n    const [username, setUsername] = useState('');\r\n    const [password, setPassword] = useState('');\r\n  \r\n    const handleLogin = () => {\r\n      // Perform authentication\r\n      // Example: make API call to authenticate user\r\n      const authenticated = true; // Dummy value for demonstration\r\n      if (authenticated) {\r\n        onLogin(username);\r\n      } else {\r\n        alert('Authentication failed');\r\n      }\r\n    };\r\n  \r\n    return (\r\n      <div className=\"login-container\">\r\n        <input type=\"text\" placeholder=\"Username\" value={username} onChange={(e) => setUsername(e.target.value)} />\r\n        <input type=\"password\" placeholder=\"Password\" value={password} onChange={(e) => setPassword(e.target.value)} />\r\n        <button onClick={handleLogin}>Login</button>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  export default Login;","import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport Login from \"./Login\";\nimport { CChart } from \"@coreui/react-chartjs\"; // Dummy data for demonstration\nconst dummyProjects = [\n  { id: 1, name: \"Project 1\" },\n  { id: 2, name: \"Project 2\" },\n];\n\nconst dummyServerInstances = [\n  { id: 1, name: \"Server 1\", status: \"Running\", cpuUsage: 60, memoryUsage: 40 },\n  { id: 2, name: \"Server 2\", status: \"Stopped\", cpuUsage: 0, memoryUsage: 0 },\n];\n\nconst dummyFirewallRules = [\n  { id: 1, rule: \"Allow SSH from specific IP\" },\n  { id: 2, rule: \"Deny ICMP traffic\" },\n];\n\nconst dummyObjectStorage = {\n  used: \"50 GB\",\n  free: \"50 GB\",\n  hits: 1000,\n};\n\n// Login component\n\n// Project list component\nconst ProjectList = ({ projects, onSelectProject }) => {\n  return (\n    <div style={{padding:\"1rem\"}}>\n      <h2>Projects</h2>\n      <ul>\n        {projects.map((project) => (\n          <li\n            key={project.name}\n            onClick={() => onSelectProject(project?.services)}\n          >\n            {project.name}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\n// Project details component\nconst ProjectDetails = ({ project, onSelectServices }) => {\n  return (\n    <div style={{padding:\"1rem\"}}>\n      <h2 style={{color:\"blue\"}}>Services List</h2>\n\n      {project.map((projecct) => (\n        <li key={projecct.name} onClick={() => onSelectServices(projecct)}>\n          {projecct.name}\n        </li>\n      ))}\n      {/* Add links to service dashboards */}\n    </div>\n  );\n};\n\n// Server Instances dashboard component\nconst ServerInstancesDashboard = ({ serverInstances }) => {\n  let serviceKey = Object.keys(serverInstances?.specs);\n  let serviceValues = Object.values(serverInstances?.specs);\n  console.log(\"ran\", serviceKey);\n  console.log(\"val\", serviceValues);\n  return (\n    <div style={{padding:\"1rem\"}}>\n      <h2 style={{color:\"blue\"}}>CPU Dashboard</h2>\n      <div\n        style={{\n          color: \"grey\",\n          border: \"1px solid grey\",\n          borderRadius: \"10px\",\n          padding: \"10px\",\n        }}\n      >\n        <div style={{ display: \"flex\" }}>\n          <div>\n            {serviceKey.map((idx) => (\n              <h3>{idx} {\" \"}</h3>\n            ))}\n          </div>\n          <div>\n            {serviceValues.map((idx) => (\n              <h3>{\" \"}{idx}</h3>\n            ))}\n          </div>\n        </div>\n      </div>\n      {/* Display graphs, charts, and controls for server instances */}\n    </div>\n  );\n};\n\n// Firewall dashboard component\nconst FirewallDashboard = ({ firewallRules }) => {\n  const ObjectArr = firewallRules?.usage.map((idx) =>\n    idx?.objects ? idx?.objects : idx?.memory ? idx.memory : idx?.size\n  );\n  console.log(\"pyar\", ObjectArr);\n  return (\n    <div style={{padding:\"1rem\"}}>\n      <h2 style={{color:\"blue\"}}>CPU Usage</h2>\n      <CChart\n        type=\"line\"\n        data={{\n          labels: [\"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\"],\n          datasets: [\n            {\n              label: \"Request Per Seconds\",\n              backgroundColor: \"rgba(220, 220, 220, 0.2)\",\n              borderColor: \"rgba(165, 139, 143, 0.85)\",\n              pointBackgroundColor: \"rgba(220, 220, 220, 1)\",\n              pointBorderColor: \"#fff\",\n              data: ObjectArr,\n            },\n          ],\n        }}\n        // options={{\n        //   plugins: {\n        //     legend: {\n        //       labels: {\n        //         color: getStyle('--cui-body-color'),\n        //       }\n        //     }\n        //   },\n        //   scales: {\n        //     x: {\n        //       grid: {\n        //         color: getStyle('--cui-border-color-translucent'),\n        //       },\n        //       ticks: {\n        //         color: getStyle('--cui-body-color'),\n        //       },\n        //     },\n        //     y: {\n        //       grid: {\n        //         color: getStyle('--cui-border-color-translucent'),\n        //       },\n        //       ticks: {\n        //         color: getStyle('--cui-body-color'),\n        //       },\n        //     },\n        //   },\n        // }}\n      />\n      {/* Display number of rules and list of rules */}\n    </div>\n  );\n};\n\n// Object Storage dashboard component\nconst ObjectStorageDashboard = ({ objectStorage }) => {\n  console.log(\"okok\",objectStorage);\n  return (\n    <div style={{padding:\"1rem\"}}>\n      <h2 style={{color:\"blue\"}}>Type and Slug Dashboard</h2>\n      <div\n        style={{\n          color: \"grey\",\n          border: \"1px solid grey\",\n          borderRadius: \"10px\",\n          padding: \"10px\",\n        }}\n      >\n        <div style={{ display: \"flex\" }}>\n          <div>\n              <h3>Slugs : {objectStorage?.slug}</h3>\n              <h3>Type :{objectStorage?.type}</h3>\n           \n          </div>\n        </div>\n      </div>\n\n      {/* Display storage usage, free space, and number of hits */}\n    </div>\n  );\n};\n\n// Main App component\nconst App = () => {\n  const [loggedInUser, setLoggedInUser] = useState(null);\n  const [selectedProject, setSelectedProject] = useState(null);\n  const [selectedservice, setSelectedservice] = useState(null);\n  const [apiData, setApiData] = useState([]);\n\n  useEffect(() => {\n    const config = {\n      headers: { Authorization: `Bearer 8e7f39bb-a52c-4528-8202-1c76d3d9ba5f` },\n    };\n    const bodyParameters = {\n      key: \"value\",\n    };\n    const called = axios\n      .get(\n        \"https://servers.sanboxes.soulharsh007.dev/api/projects\",\n        config,\n        bodyParameters\n      )\n      .then((res) => {\n        console.log(\"res\", res.data.data);\n        setApiData(res.data.data);\n      });\n  }, []);\n  const handleLogin = (username) => {\n    setLoggedInUser(username);\n  };\n\n  const handleSelectProject = (project) => {\n    console.log(\"servisce\", project);\n    setSelectedProject(project);\n  };\n\n  const handleSelectServices = (project) => {\n    console.log(\"servoce-- \", project);\n    setSelectedservice(project);\n  };\n\n  return (\n    <div>\n      {!loggedInUser ? (\n        <Login onLogin={handleLogin} />\n      ) : (\n        <div>\n          <h1 style={{color:\"red\"}}>Welcome, {loggedInUser}!</h1>\n          <div className=\"gulabzain\" style={{ display: \"flex\" }}>\n            {selectedProject ? (\n              <ProjectDetails\n                project={selectedProject}\n                onSelectServices={handleSelectServices}\n              />\n            ) : (\n              <ProjectList\n                projects={apiData}\n                onSelectProject={handleSelectProject}\n              />\n            )}\n\n            {/* Add service dashboards */}\n            {selectedservice && (\n              <ServerInstancesDashboard serverInstances={selectedservice} />\n            )}\n            {selectedservice && (\n              <FirewallDashboard firewallRules={selectedservice} />\n            )}\n            {selectedservice && (\n              <ObjectStorageDashboard objectStorage={selectedservice} />\n            )}\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}